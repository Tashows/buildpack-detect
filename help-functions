#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

cmd-buildpack-detect-help() {
  declare desc="help command"
  local plugin_name="buildpack-detect"
  local plugin_description="Detect valid buildpacks for an app."

	cat <<help_desc
$plugin_name, $plugin_description

Usage:
help_desc
	fn-help-content | sort | column -c2 -t -s,
}

fn-help-content() {
  declare desc="return help content"
  cat <<help_content
    buildpack-detect(:detect) <app> (--json-output), Run buildpack detection on an app without deploying it.
    buildpack-detect:help, Show help for the buildpack-detect plugin
help_content
}

cmd-buildpack-detect-detect() {
	declare desc="run buildpack detection on an app, without deploying it."
	declare CMD="$1"
	local plugin_name="buildpack-detect"
	local plugin_description="Run buildpack detection on an app, without deploying it."
	if [[ "$CMD" == "${plugin_name}:detect" || "$CMD" == "${plugin_name}" ]]; then
		APP="$2"

		if [[ -z "$APP" ]]; then
			echo "Usage: dokku buildpack-detect:detect <app>"
			exit 1
		fi

		APP_ROOT="/home/dokku/$APP"

		if [[ ! -d "$APP_ROOT" ]]; then
			echo "App $APP does not exist"
			exit 1
		fi

		if [[ "$3" == "--json-output" ]]; then
			BUILDPACK_DETECT_OUTPUT="json"
		fi

		docker run --rm \
			-v "$APP_ROOT:/tmp/app" \
			${BUILDPACK_DETECT_OUTPUT:+-e BUILDPACK_DETECT_OUTPUT="$BUILDPACK_DETECT_OUTPUT"} \
			gliderlabs/herokuish \
			/bin/herokuish buildpack detect /tmp/app
	else
		cmd-buildpack-detect-help "$CMD"
	fi
}
